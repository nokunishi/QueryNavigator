{"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/controller/IInsightFacade.ts":{"path":"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":104,"6":104,"7":1,"8":2,"9":2,"10":1,"11":9,"12":9,"13":1},"f":{"0":1,"1":104,"2":2,"3":9},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/controller/IInsightFacade.ts","sources":["/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f335a14129f3281d0139438c3345b46e7f4d7720","contentHash":"e16349cafe27784fb6b2a3981d857d99583de2459568da4615f6bdc77720d564"},"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/controller/InsightFacade.ts":{"path":"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":25},"end":{"line":26,"column":52}},"26":{"start":{"line":27,"column":19},"end":{"line":27,"column":47}},"27":{"start":{"line":28,"column":11},"end":{"line":28,"column":44}},"28":{"start":{"line":29,"column":22},"end":{"line":29,"column":53}},"29":{"start":{"line":33,"column":8},"end":{"line":33,"column":50}},"30":{"start":{"line":34,"column":8},"end":{"line":34,"column":49}},"31":{"start":{"line":37,"column":8},"end":{"line":48,"column":9}},"32":{"start":{"line":38,"column":12},"end":{"line":40,"column":13}},"33":{"start":{"line":39,"column":16},"end":{"line":39,"column":75}},"34":{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},"35":{"start":{"line":42,"column":16},"end":{"line":42,"column":75}},"36":{"start":{"line":44,"column":12},"end":{"line":44,"column":62}},"37":{"start":{"line":47,"column":12},"end":{"line":47,"column":71}},"38":{"start":{"line":51,"column":8},"end":{"line":60,"column":9}},"39":{"start":{"line":52,"column":12},"end":{"line":52,"column":71}},"40":{"start":{"line":54,"column":13},"end":{"line":60,"column":9}},"41":{"start":{"line":55,"column":12},"end":{"line":55,"column":72}},"42":{"start":{"line":58,"column":12},"end":{"line":58,"column":42}},"43":{"start":{"line":59,"column":12},"end":{"line":59,"column":39}},"44":{"start":{"line":63,"column":8},"end":{"line":80,"column":9}},"45":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"46":{"start":{"line":65,"column":16},"end":{"line":65,"column":90}},"47":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"48":{"start":{"line":68,"column":16},"end":{"line":68,"column":46}},"49":{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},"50":{"start":{"line":71,"column":16},"end":{"line":71,"column":98}},"51":{"start":{"line":73,"column":32},"end":{"line":73,"column":49}},"52":{"start":{"line":74,"column":28},"end":{"line":74,"column":72}},"53":{"start":{"line":75,"column":25},"end":{"line":75,"column":111}},"54":{"start":{"line":76,"column":12},"end":{"line":76,"column":97}},"55":{"start":{"line":79,"column":12},"end":{"line":79,"column":71}},"56":{"start":{"line":83,"column":34},"end":{"line":83,"column":36}},"57":{"start":{"line":84,"column":25},"end":{"line":84,"column":50}},"58":{"start":{"line":85,"column":8},"end":{"line":98,"column":11}},"59":{"start":{"line":86,"column":32},"end":{"line":86,"column":81}},"60":{"start":{"line":87,"column":26},"end":{"line":87,"column":51}},"61":{"start":{"line":88,"column":22},"end":{"line":88,"column":23}},"62":{"start":{"line":89,"column":12},"end":{"line":91,"column":15}},"63":{"start":{"line":90,"column":16},"end":{"line":90,"column":37}},"64":{"start":{"line":92,"column":33},"end":{"line":96,"column":13}},"65":{"start":{"line":97,"column":12},"end":{"line":97,"column":53}},"66":{"start":{"line":99,"column":8},"end":{"line":99,"column":52}},"67":{"start":{"line":102,"column":0},"end":{"line":102,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":18},"end":{"line":35,"column":5}},"line":32},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":40},"end":{"line":49,"column":5}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":22},"end":{"line":61,"column":5}},"line":50},"9":{"name":"(anonymous_9)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":24},"end":{"line":81,"column":5}},"line":62},"10":{"name":"(anonymous_10)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":19},"end":{"line":100,"column":5}},"line":82},"11":{"name":"(anonymous_11)","decl":{"start":{"line":85,"column":27},"end":{"line":85,"column":28}},"loc":{"start":{"line":85,"column":42},"end":{"line":98,"column":9}},"line":85},"12":{"name":"(anonymous_12)","decl":{"start":{"line":89,"column":28},"end":{"line":89,"column":29}},"loc":{"start":{"line":89,"column":40},"end":{"line":91,"column":13}},"line":89}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":38,"column":12},"end":{"line":40,"column":13}},"type":"if","locations":[{"start":{"line":38,"column":12},"end":{"line":40,"column":13}},{"start":{"line":38,"column":12},"end":{"line":40,"column":13}}],"line":38},"17":{"loc":{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},{"start":{"line":41,"column":12},"end":{"line":43,"column":13}}],"line":41},"18":{"loc":{"start":{"line":51,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":60,"column":9}},{"start":{"line":51,"column":8},"end":{"line":60,"column":9}}],"line":51},"19":{"loc":{"start":{"line":54,"column":13},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":13},"end":{"line":60,"column":9}},{"start":{"line":54,"column":13},"end":{"line":60,"column":9}}],"line":54},"20":{"loc":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},{"start":{"line":64,"column":12},"end":{"line":66,"column":13}}],"line":64},"21":{"loc":{"start":{"line":64,"column":16},"end":{"line":64,"column":53}},"type":"binary-expr","locations":[{"start":{"line":64,"column":16},"end":{"line":64,"column":35}},{"start":{"line":64,"column":39},"end":{"line":64,"column":53}}],"line":64},"22":{"loc":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},{"start":{"line":67,"column":12},"end":{"line":69,"column":13}}],"line":67},"23":{"loc":{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":72,"column":13}},{"start":{"line":70,"column":12},"end":{"line":72,"column":13}}],"line":70}},"s":{"0":1,"1":148,"2":148,"3":148,"4":148,"5":148,"6":30,"7":148,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":148,"21":148,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":49,"30":49,"31":45,"32":45,"33":3,"34":42,"35":1,"36":41,"37":0,"38":15,"39":3,"40":12,"41":2,"42":10,"43":10,"44":147,"45":147,"46":0,"47":147,"48":147,"49":147,"50":0,"51":147,"52":147,"53":139,"54":139,"55":8,"56":10,"57":10,"58":10,"59":8,"60":8,"61":8,"62":8,"63":11,"64":8,"65":8,"66":10,"67":1},"f":{"0":148,"1":30,"2":0,"3":1,"4":0,"5":1,"6":49,"7":45,"8":15,"9":147,"10":10,"11":8,"12":11},"b":{"0":[1,1,1],"1":[1,0],"2":[148,0],"3":[148,0],"4":[148,148],"5":[0,148],"6":[148,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[148,0],"15":[148,148],"16":[3,42],"17":[1,41],"18":[3,12],"19":[2,10],"20":[0,147],"21":[147,147],"22":[147,0],"23":[0,147]},"inputSourceMap":{"version":3,"file":"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/controller/InsightFacade.ts","sources":["/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n} from \"./IInsightFacade\";\n\nimport {Database} from \"../model/Database\";\nimport * as fs from \"fs-extra\";\nimport {Query, parseOptions, parseWhere} from \"../query/QueryParser\";\n// import {Query, parseOptions, parseWhere} from \"../query/QueryParser\";\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\tprivate database: Database;\n\n\tconstructor() {\n\t\tthis.database = new Database();\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\n\t}\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\ttry {\n\t\t\tif (this.database.invalidId(id)) {\n\t\t\t\treturn Promise.reject(new InsightError());\n\t\t\t}\n\n\t\t\tif (kind === InsightDatasetKind.Rooms) {\n\t\t\t\treturn Promise.reject(new InsightError());\n\t\t\t}\n\n\t\t\treturn this.database.addValidDataset(id, content);\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\t}\n\n\tpublic removeDataset(id: string): Promise<string> {\n\t\tif (this.database.invalidId(id)) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t} else if (!fs.existsSync(\"./data/\" + id)) {\n\t\t\treturn Promise.reject(new NotFoundError());\n\t\t} else {\n\t\t\tfs.unlinkSync(\"./data/\" + id);\n\t\t\treturn Promise.resolve(id);\n\t\t}\n\t}\n\n\tpublic performQuery(query: unknown): Promise<InsightResult[]> {\n\t\ttry {\n\t\t\tif (query === undefined || query === null) {\n\t\t\t\treturn Promise.reject(new InsightError(\"Query is null\"));\n\t\t\t}\n\n\t\t\tif (typeof query === \"object\") {\n\t\t\t\tquery = JSON.stringify(query);\n\t\t\t}\n\n\t\t\tif (typeof query !== \"string\") {\n\t\t\t\treturn Promise.reject(new InsightError(\"Query is not a string\"));\n\t\t\t}\n\n\t\t\tconst queryObject: Query = JSON.parse(query);\n\t\t\t// Get name of the dataset\n\t\t\tlet datasetId = queryObject.OPTIONS.COLUMNS[0].split(\"_\")[0];\n\t\t\tlet result = parseWhere(queryObject.WHERE, this.database.readDataset(datasetId));\n\t\t\treturn Promise.resolve(parseOptions(queryObject.OPTIONS, result));\n\t\t} catch (error) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\t}\n\n\t// not sure if we're allowed to have this async either\n\tpublic listDatasets(): Promise<InsightDataset[]> {\n\t\tlet insightDatasetLists: InsightDataset[] = [];\n\t\tlet datasetIds = this.database.getAllIds();\n\n\t\tdatasetIds.forEach((datasetId) => {\n\t\t\tlet datasetString = fs.readFileSync(\"./data/\" + datasetId).toString();\n\t\t\tlet dataset = JSON.parse(datasetString);\n\t\t\tlet sum = 0;\n\n\t\t\tdataset.forEach((course: string) => {\n\t\t\t\t// course.length = num of sections in each course\n\t\t\t\tsum += course.length;\n\t\t\t});\n\n\t\t\tlet insightDataset: InsightDataset = {\n\t\t\t\tid: datasetId,\n\t\t\t\tkind: InsightDatasetKind.Sections,\n\t\t\t\tnumRows: sum,\n\t\t\t};\n\n\t\t\tinsightDatasetLists.push(insightDataset);\n\t\t});\n\n\t\treturn Promise.resolve(insightDatasetLists);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3f25d97996852eed11febe2bbb510ce3e55cb22f","contentHash":"9407003e2ed0edd97c33ff820be2f9b996a00fc631f94e4466a23fc2df9884d1"},"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/model/Database.ts":{"path":"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/model/Database.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":26}},"26":{"start":{"line":27,"column":11},"end":{"line":27,"column":44}},"27":{"start":{"line":28,"column":18},"end":{"line":28,"column":38}},"28":{"start":{"line":29,"column":18},"end":{"line":29,"column":38}},"29":{"start":{"line":30,"column":25},"end":{"line":30,"column":64}},"30":{"start":{"line":31,"column":12},"end":{"line":31,"column":42}},"31":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"32":{"start":{"line":35,"column":12},"end":{"line":35,"column":35}},"33":{"start":{"line":39,"column":8},"end":{"line":39,"column":40}},"34":{"start":{"line":42,"column":8},"end":{"line":42,"column":59}},"35":{"start":{"line":45,"column":8},"end":{"line":73,"column":9}},"36":{"start":{"line":46,"column":26},"end":{"line":46,"column":61}},"37":{"start":{"line":47,"column":24},"end":{"line":47,"column":29}},"38":{"start":{"line":48,"column":12},"end":{"line":59,"column":13}},"39":{"start":{"line":50,"column":16},"end":{"line":58,"column":17}},"40":{"start":{"line":51,"column":37},"end":{"line":51,"column":67}},"41":{"start":{"line":52,"column":20},"end":{"line":54,"column":21}},"42":{"start":{"line":53,"column":24},"end":{"line":53,"column":47}},"43":{"start":{"line":55,"column":20},"end":{"line":57,"column":21}},"44":{"start":{"line":56,"column":24},"end":{"line":56,"column":37}},"45":{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},"46":{"start":{"line":61,"column":16},"end":{"line":61,"column":58}},"47":{"start":{"line":63,"column":12},"end":{"line":68,"column":13}},"48":{"start":{"line":64,"column":16},"end":{"line":64,"column":74}},"49":{"start":{"line":67,"column":16},"end":{"line":67,"column":75}},"50":{"start":{"line":69,"column":12},"end":{"line":69,"column":53}},"51":{"start":{"line":72,"column":12},"end":{"line":72,"column":71}},"52":{"start":{"line":76,"column":8},"end":{"line":99,"column":9}},"53":{"start":{"line":77,"column":27},"end":{"line":77,"column":29}},"54":{"start":{"line":78,"column":30},"end":{"line":78,"column":32}},"55":{"start":{"line":79,"column":27},"end":{"line":79,"column":29}},"56":{"start":{"line":80,"column":12},"end":{"line":86,"column":15}},"57":{"start":{"line":81,"column":16},"end":{"line":85,"column":19}},"58":{"start":{"line":82,"column":20},"end":{"line":84,"column":21}},"59":{"start":{"line":83,"column":24},"end":{"line":83,"column":94}},"60":{"start":{"line":87,"column":12},"end":{"line":95,"column":15}},"61":{"start":{"line":88,"column":16},"end":{"line":93,"column":19}},"62":{"start":{"line":89,"column":20},"end":{"line":92,"column":21}},"63":{"start":{"line":90,"column":43},"end":{"line":90,"column":68}},"64":{"start":{"line":91,"column":24},"end":{"line":91,"column":52}},"65":{"start":{"line":94,"column":16},"end":{"line":94,"column":32}},"66":{"start":{"line":98,"column":12},"end":{"line":98,"column":71}},"67":{"start":{"line":102,"column":25},"end":{"line":102,"column":41}},"68":{"start":{"line":103,"column":23},"end":{"line":103,"column":25}},"69":{"start":{"line":104,"column":8},"end":{"line":108,"column":11}},"70":{"start":{"line":105,"column":32},"end":{"line":105,"column":81}},"71":{"start":{"line":106,"column":26},"end":{"line":106,"column":51}},"72":{"start":{"line":107,"column":12},"end":{"line":107,"column":76}},"73":{"start":{"line":109,"column":8},"end":{"line":109,"column":24}},"74":{"start":{"line":112,"column":8},"end":{"line":119,"column":9}},"75":{"start":{"line":113,"column":32},"end":{"line":113,"column":74}},"76":{"start":{"line":114,"column":26},"end":{"line":114,"column":51}},"77":{"start":{"line":115,"column":12},"end":{"line":115,"column":51}},"78":{"start":{"line":118,"column":12},"end":{"line":118,"column":71}},"79":{"start":{"line":122,"column":0},"end":{"line":122,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":18},"end":{"line":37,"column":5}},"line":33},"7":{"name":"(anonymous_7)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":16},"end":{"line":40,"column":5}},"line":38},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":18},"end":{"line":43,"column":5}},"line":41},"9":{"name":"(anonymous_9)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":36},"end":{"line":74,"column":5}},"line":44},"10":{"name":"(anonymous_10)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":35},"end":{"line":100,"column":5}},"line":75},"11":{"name":"(anonymous_11)","decl":{"start":{"line":80,"column":61},"end":{"line":80,"column":62}},"loc":{"start":{"line":80,"column":72},"end":{"line":86,"column":13}},"line":80},"12":{"name":"(anonymous_12)","decl":{"start":{"line":81,"column":49},"end":{"line":81,"column":50}},"loc":{"start":{"line":81,"column":61},"end":{"line":85,"column":17}},"line":81},"13":{"name":"(anonymous_13)","decl":{"start":{"line":87,"column":46},"end":{"line":87,"column":47}},"loc":{"start":{"line":87,"column":62},"end":{"line":95,"column":13}},"line":87},"14":{"name":"(anonymous_14)","decl":{"start":{"line":88,"column":35},"end":{"line":88,"column":36}},"loc":{"start":{"line":88,"column":47},"end":{"line":93,"column":17}},"line":88},"15":{"name":"(anonymous_15)","decl":{"start":{"line":101,"column":4},"end":{"line":101,"column":5}},"loc":{"start":{"line":101,"column":21},"end":{"line":110,"column":5}},"line":101},"16":{"name":"(anonymous_16)","decl":{"start":{"line":104,"column":27},"end":{"line":104,"column":28}},"loc":{"start":{"line":104,"column":42},"end":{"line":108,"column":9}},"line":104},"17":{"name":"(anonymous_17)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":26},"end":{"line":120,"column":5}},"line":111}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"17":{"loc":{"start":{"line":42,"column":15},"end":{"line":42,"column":58}},"type":"binary-expr","locations":[{"start":{"line":42,"column":15},"end":{"line":42,"column":24}},{"start":{"line":42,"column":28},"end":{"line":42,"column":44}},{"start":{"line":42,"column":48},"end":{"line":42,"column":58}}],"line":42},"18":{"loc":{"start":{"line":52,"column":20},"end":{"line":54,"column":21}},"type":"if","locations":[{"start":{"line":52,"column":20},"end":{"line":54,"column":21}},{"start":{"line":52,"column":20},"end":{"line":54,"column":21}}],"line":52},"19":{"loc":{"start":{"line":55,"column":20},"end":{"line":57,"column":21}},"type":"if","locations":[{"start":{"line":55,"column":20},"end":{"line":57,"column":21}},{"start":{"line":55,"column":20},"end":{"line":57,"column":21}}],"line":55},"20":{"loc":{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},{"start":{"line":60,"column":12},"end":{"line":62,"column":13}}],"line":60},"21":{"loc":{"start":{"line":63,"column":12},"end":{"line":68,"column":13}},"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":68,"column":13}},{"start":{"line":63,"column":12},"end":{"line":68,"column":13}}],"line":63},"22":{"loc":{"start":{"line":82,"column":20},"end":{"line":84,"column":21}},"type":"if","locations":[{"start":{"line":82,"column":20},"end":{"line":84,"column":21}},{"start":{"line":82,"column":20},"end":{"line":84,"column":21}}],"line":82},"23":{"loc":{"start":{"line":89,"column":20},"end":{"line":92,"column":21}},"type":"if","locations":[{"start":{"line":89,"column":20},"end":{"line":92,"column":21}},{"start":{"line":89,"column":20},"end":{"line":92,"column":21}}],"line":89},"24":{"loc":{"start":{"line":89,"column":24},"end":{"line":89,"column":62}},"type":"binary-expr","locations":[{"start":{"line":89,"column":24},"end":{"line":89,"column":38}},{"start":{"line":89,"column":42},"end":{"line":89,"column":62}}],"line":89}},"s":{"0":1,"1":153,"2":153,"3":153,"4":153,"5":153,"6":377,"7":153,"8":0,"9":0,"10":0,"11":1,"12":2,"13":0,"14":1,"15":2,"16":0,"17":2,"18":2,"19":2,"20":153,"21":153,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":49,"32":40,"33":42,"34":60,"35":41,"36":41,"37":39,"38":39,"39":7484,"40":74714,"41":74714,"42":28262,"43":74714,"44":74712,"45":38,"46":4,"47":34,"48":32,"49":2,"50":32,"51":7,"52":41,"53":41,"54":41,"55":41,"56":41,"57":40,"58":7502,"59":7485,"60":40,"61":40,"62":7485,"63":7485,"64":7484,"65":39,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":139,"75":139,"76":132,"77":132,"78":7,"79":1},"f":{"0":153,"1":377,"2":0,"3":2,"4":0,"5":2,"6":49,"7":42,"8":60,"9":41,"10":41,"11":40,"12":7502,"13":40,"14":7485,"15":0,"16":0,"17":139},"b":{"0":[1,1,1],"1":[1,0],"2":[153,0],"3":[153,0],"4":[153,153],"5":[0,153],"6":[153,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,2],"12":[2,2],"13":[2,0],"14":[153,0],"15":[153,153],"16":[40,9],"17":[60,58,56],"18":[28262,46452],"19":[74712,2],"20":[4,34],"21":[32,2],"22":[7485,17],"23":[7485,0],"24":[7485,7485]},"inputSourceMap":{"version":3,"file":"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/model/Database.ts","sources":["/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/model/Database.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from \"fs-extra\";\nimport {Dataset} from \"./Dataset\";\nimport {Section} from \"./Section\";\nimport {InsightDatasetKind, InsightError, InsightDataset, InsightResult} from \"../controller/IInsightFacade\";\nimport * as zip from \"jszip\";\n\n// list of valid datasets\nexport class Database {\n\tconstructor() {\n\t\tif (!fs.existsSync(\"./data\")) {\n\t\t\tfs.mkdirSync(\"./data\");\n\t\t}\n\t}\n\n\tpublic getAllIds(): string[] {\n\t\treturn fs.readdirSync(\"./data\");\n\t}\n\n\tpublic invalidId(id: string): boolean {\n\t\treturn id === \"\" || id.includes(\"_\") || id === \" \";\n\t}\n\n\t// Create\n\n\t// add a valid dataset\n\t// file name = id of dataset\n\t// TODO: refactor to not-async fn\n\tpublic async addValidDataset(id: string, file: string): Promise<string[]> {\n\t\ttry {\n\t\t\tlet courses = await this.getAllCoursesInZip(file);\n\t\t\tlet valid = false;\n\n\t\t\tfor (const course of courses) {\n\t\t\t\tlet section: any;\n\n\t\t\t\tfor (section of course) {\n\t\t\t\t\tlet sectionObj = new Section(section);\n\t\t\t\t\tif (section[\"Section\"] === \"overall\") {\n\t\t\t\t\t\tsection[\"Year\"] = 1900;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (sectionObj.isValid()) {\n\t\t\t\t\t\tvalid = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// console.log(courses);\n\n\t\t\t// if no valid section, return InsightError\n\t\t\tif (!valid) {\n\t\t\t\tthrow new InsightError();\n\t\t\t}\n\n\t\t\tif (!fs.pathExistsSync(\"./data/\" + id)) {\n\t\t\t\tfs.writeFileSync(\"./data/\" + id, JSON.stringify(courses));\n\t\t\t} else {\n\t\t\t\treturn Promise.reject(new InsightError());\n\t\t\t}\n\n\t\t\treturn Promise.resolve(this.getAllIds());\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\t}\n\n\t/**\n\t * This function returns all the courses in a zip file\n\t * @param file name of the file example \"pair.zip\"\n\t * @returns {Promise<string[]>} sections\n\t */\n\tpublic async getAllCoursesInZip(file: string): Promise<string[]> {\n\t\ttry {\n\t\t\tlet promises: Array<Promise<string> | undefined> = [];\n\t\t\tlet courseNames: string[] = [];\n\t\t\tlet sections: string[] = [];\n\n\t\t\tawait zip.loadAsync(file, {base64: true}).then((unzip) => {\n\t\t\t\tunzip.folder(\"courses\")?.forEach((course) => {\n\t\t\t\t\tif (course !== \".DS_Store\") {\n\t\t\t\t\t\tpromises.push(unzip.folder(\"courses\")?.file(course)?.async(\"string\"));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn Promise.all(promises).then((arrCourses) => {\n\t\t\t\tarrCourses.forEach((course) => {\n\t\t\t\t\tif (course != null && course !== undefined) {\n\t\t\t\t\t\tlet courseResult = JSON.parse(course).result;\n\t\t\t\t\t\tsections.push(courseResult);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn sections;\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\t}\n\n\t// Read\n\tpublic getAllDatasets(): Dataset[] {\n\t\tlet datasetIds = this.getAllIds();\n\t\tlet datasets: Dataset[] = [];\n\n\t\tdatasetIds.forEach((datasetId) => {\n\t\t\tlet datasetString = fs.readFileSync(\"./data/\" + datasetId).toString();\n\t\t\tlet dataset = JSON.parse(datasetString) as any[];\n\t\t\t// Flatten data from all courses to a single array\n\t\t\tdatasets.push(new Dataset(datasetId, dataset.flat()));\n\t\t});\n\t\treturn datasets;\n\t}\n\n\tpublic async readDataset(id: string): Promise<any[]> {\n\t\ttry {\n\t\t\tlet datasetString = fs.readFileSync(\"./data/\" + id).toString();\n\t\t\tlet dataset = JSON.parse(datasetString) as any[];\n\t\t\t// Flatten data from all courses to a single array\n\t\t\treturn Promise.resolve(dataset.flat());\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(new InsightError());\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cbc42e9f37412349d8ace9d7abd931d1386885f6","contentHash":"649365bed33fba5fa5d262651a7b373b9d63650110e4d0de122f98562a988327"},"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/model/Dataset.ts":{"path":"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/model/Dataset.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":8,"column":8},"end":{"line":8,"column":21}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":25}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":23}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":26},"end":{"line":10,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":12},"end":{"line":13,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":14},"end":{"line":16,"column":5}},"line":14}},"branchMap":{},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":1},"f":{"0":0,"1":0,"2":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/model/Dataset.ts","sources":["/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/model/Dataset.ts"],"names":[],"mappings":";;;AAKA,MAAa,OAAO;IACZ,EAAE,CAAS;IACX,IAAI,CAA8B;IAEzC,YAAY,EAAU,EAAE,IAAiC;QACxD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAEM,KAAK;QACX,OAAO,IAAI,CAAC,EAAE,CAAC;IAChB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;CACD;AAhBD,0BAgBC","sourcesContent":["/**\n * Dataset class\n * @param {string} id id of the dataset\n * @param {Array<{[key: string]: any}>} data data in JSON\n */\nexport class Dataset {\n\tpublic id: string;\n\tpublic data: Array<{[key: string]: any}>;\n\n\tconstructor(id: string, data: Array<{[key: string]: any}>) {\n\t\tthis.id = id;\n\t\tthis.data = data;\n\t}\n\n\tpublic getID(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic getData(): Array<{[key: string]: any}> {\n\t\treturn this.data;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1141c90d7212af78ae599cebafbb40913ba176e3","contentHash":"d206ffe6510666a08e781d3d9898b9212e37776c52366234b72a350396acb5d4"},"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/model/Section.ts":{"path":"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/model/Section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":17,"column":8},"end":{"line":17,"column":32}},"3":{"start":{"line":18,"column":8},"end":{"line":18,"column":38}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":38}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":47}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":39}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":36}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":34}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":36}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":36}},"11":{"start":{"line":26,"column":8},"end":{"line":26,"column":38}},"12":{"start":{"line":27,"column":8},"end":{"line":27,"column":42}},"13":{"start":{"line":30,"column":8},"end":{"line":39,"column":38}},"14":{"start":{"line":42,"column":0},"end":{"line":42,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":25},"end":{"line":28,"column":5}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":14},"end":{"line":40,"column":5}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":30,"column":16},"end":{"line":39,"column":36}},"type":"binary-expr","locations":[{"start":{"line":30,"column":16},"end":{"line":30,"column":37}},{"start":{"line":31,"column":12},"end":{"line":31,"column":35}},{"start":{"line":32,"column":12},"end":{"line":32,"column":36}},{"start":{"line":33,"column":12},"end":{"line":33,"column":41}},{"start":{"line":34,"column":12},"end":{"line":34,"column":35}},{"start":{"line":35,"column":12},"end":{"line":35,"column":35}},{"start":{"line":36,"column":12},"end":{"line":36,"column":34}},{"start":{"line":37,"column":12},"end":{"line":37,"column":35}},{"start":{"line":38,"column":12},"end":{"line":38,"column":35}},{"start":{"line":39,"column":12},"end":{"line":39,"column":36}}],"line":30}},"s":{"0":1,"1":1,"2":74714,"3":74714,"4":74714,"5":74714,"6":74714,"7":74714,"8":74714,"9":74714,"10":74714,"11":74714,"12":74714,"13":74714,"14":1},"f":{"0":74714,"1":74714},"b":{"0":[74714,74713,74713,74713,74713,74713,74713,74713,74713,74713]},"inputSourceMap":{"version":3,"file":"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/model/Section.ts","sources":["/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/model/Section.ts"],"names":[],"mappings":";;;AAKA,MAAa,OAAO;IACF,EAAE,CAAS;IACX,IAAI,CAAS;IACb,KAAK,CAAS;IACd,UAAU,CAAS;IACnB,IAAI,CAAS;IACvB,IAAI,CAAS;IACH,GAAG,CAAS;IACZ,IAAI,CAAS;IACb,IAAI,CAAS;IACb,KAAK,CAAS;IAEf,OAAO,CAAS;IAEhC,YAAY,OAAY;QACvB,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QAE9B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC;IAGM,OAAO;QACb,OAAO,CACN,IAAI,CAAC,EAAE,KAAK,SAAS;YACrB,IAAI,CAAC,IAAI,KAAK,SAAS;YACvB,IAAI,CAAC,KAAK,KAAK,SAAS;YACxB,IAAI,CAAC,UAAU,KAAK,SAAS;YAC7B,IAAI,CAAC,IAAI,KAAK,SAAS;YACvB,IAAI,CAAC,IAAI,KAAK,SAAS;YACvB,IAAI,CAAC,GAAG,KAAK,SAAS;YACtB,IAAI,CAAC,IAAI,KAAK,SAAS;YACvB,IAAI,CAAC,IAAI,KAAK,SAAS;YACvB,IAAI,CAAC,KAAK,KAAK,SAAS,CACxB,CAAC;IACH,CAAC;CACD;AA5CD,0BA4CC","sourcesContent":["import {timeLog} from \"console\";\n\ntype MField = string | undefined;\ntype SField = number | undefined;\n\nexport class Section {\n\tprivate readonly id: MField;\n\tprivate readonly uuid: MField;\n\tprivate readonly title: MField;\n\tprivate readonly instructor: MField;\n\tprivate readonly dept: MField;\n\tpublic year: SField;\n\tprivate readonly avg: SField;\n\tprivate readonly pass: SField;\n\tprivate readonly fail: SField;\n\tprivate readonly audit: SField;\n\n\tpublic readonly section: MField; // not really, but it's string | null\n\n\tconstructor(section: any) {\n\t\tthis.id = section[\"id\"];\n\t\tthis.uuid = section[\"Course\"];\n\t\tthis.title = section[\"Title\"];\n\t\tthis.instructor = section[\"Professor\"];\n\t\tthis.dept = section[\"Subject\"];\n\t\tthis.year = section[\"Year\"];\n\t\tthis.avg = section[\"Avg\"];\n\t\tthis.pass = section[\"Pass\"];\n\t\tthis.fail = section[\"Fail\"];\n\t\tthis.audit = section[\"Audit\"];\n\n\t\tthis.section = section[\"Section\"];\n\t}\n\n\t// check if it's valid, also set year = 1900 if Sections == overall\n\tpublic isValid(): boolean {\n\t\treturn (\n\t\t\tthis.id !== undefined &&\n\t\t\tthis.uuid !== undefined &&\n\t\t\tthis.title !== undefined &&\n\t\t\tthis.instructor !== undefined &&\n\t\t\tthis.dept !== undefined &&\n\t\t\tthis.year !== undefined &&\n\t\t\tthis.avg !== undefined &&\n\t\t\tthis.pass !== undefined &&\n\t\t\tthis.fail !== undefined &&\n\t\t\tthis.audit !== undefined\n\t\t);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"89eb40a05f482cca1d330af23a3a07f0ad7ea920","contentHash":"2bac05504b206c2792f259a33fbf06dda8bbd852cf4624ae387b130479773b2a"},"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/query/QueryParser.ts":{"path":"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/query/QueryParser.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":51}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":27}},"4":{"start":{"line":6,"column":17},"end":{"line":6,"column":22}},"5":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":65}},"7":{"start":{"line":11,"column":14},"end":{"line":11,"column":18}},"8":{"start":{"line":12,"column":12},"end":{"line":36,"column":6}},"9":{"start":{"line":13,"column":8},"end":{"line":16,"column":9}},"10":{"start":{"line":14,"column":12},"end":{"line":14,"column":30}},"11":{"start":{"line":15,"column":12},"end":{"line":15,"column":74}},"12":{"start":{"line":17,"column":17},"end":{"line":17,"column":44}},"13":{"start":{"line":18,"column":21},"end":{"line":18,"column":25}},"14":{"start":{"line":19,"column":8},"end":{"line":30,"column":9}},"15":{"start":{"line":20,"column":12},"end":{"line":22,"column":13}},"16":{"start":{"line":21,"column":16},"end":{"line":21,"column":36}},"17":{"start":{"line":23,"column":12},"end":{"line":29,"column":13}},"18":{"start":{"line":24,"column":36},"end":{"line":24,"column":82}},"19":{"start":{"line":25,"column":16},"end":{"line":25,"column":49}},"20":{"start":{"line":28,"column":16},"end":{"line":28,"column":88}},"21":{"start":{"line":31,"column":8},"end":{"line":34,"column":9}},"22":{"start":{"line":32,"column":12},"end":{"line":32,"column":30}},"23":{"start":{"line":33,"column":12},"end":{"line":33,"column":24}},"24":{"start":{"line":35,"column":8},"end":{"line":35,"column":22}},"25":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"26":{"start":{"line":38,"column":8},"end":{"line":38,"column":82}},"27":{"start":{"line":40,"column":4},"end":{"line":40,"column":13}},"28":{"start":{"line":42,"column":0},"end":{"line":42,"column":32}},"29":{"start":{"line":44,"column":17},"end":{"line":44,"column":22}},"30":{"start":{"line":45,"column":4},"end":{"line":94,"column":5}},"31":{"start":{"line":47,"column":12},"end":{"line":49,"column":15}},"32":{"start":{"line":48,"column":16},"end":{"line":48,"column":86}},"33":{"start":{"line":50,"column":12},"end":{"line":50,"column":18}},"34":{"start":{"line":52,"column":12},"end":{"line":54,"column":15}},"35":{"start":{"line":53,"column":16},"end":{"line":53,"column":86}},"36":{"start":{"line":55,"column":12},"end":{"line":55,"column":18}},"37":{"start":{"line":57,"column":12},"end":{"line":59,"column":15}},"38":{"start":{"line":58,"column":16},"end":{"line":58,"column":110}},"39":{"start":{"line":60,"column":12},"end":{"line":60,"column":18}},"40":{"start":{"line":62,"column":12},"end":{"line":79,"column":15}},"41":{"start":{"line":63,"column":24},"end":{"line":63,"column":44}},"42":{"start":{"line":64,"column":16},"end":{"line":78,"column":17}},"43":{"start":{"line":65,"column":20},"end":{"line":65,"column":99}},"44":{"start":{"line":67,"column":21},"end":{"line":78,"column":17}},"45":{"start":{"line":68,"column":20},"end":{"line":68,"column":92}},"46":{"start":{"line":70,"column":21},"end":{"line":78,"column":17}},"47":{"start":{"line":71,"column":20},"end":{"line":71,"column":113}},"48":{"start":{"line":73,"column":21},"end":{"line":78,"column":17}},"49":{"start":{"line":74,"column":20},"end":{"line":74,"column":82}},"50":{"start":{"line":77,"column":20},"end":{"line":77,"column":95}},"51":{"start":{"line":80,"column":12},"end":{"line":80,"column":18}},"52":{"start":{"line":82,"column":12},"end":{"line":84,"column":15}},"53":{"start":{"line":83,"column":16},"end":{"line":83,"column":110}},"54":{"start":{"line":85,"column":12},"end":{"line":85,"column":18}},"55":{"start":{"line":87,"column":12},"end":{"line":87,"column":76}},"56":{"start":{"line":88,"column":12},"end":{"line":88,"column":18}},"57":{"start":{"line":90,"column":12},"end":{"line":90,"column":76}},"58":{"start":{"line":91,"column":12},"end":{"line":91,"column":18}},"59":{"start":{"line":93,"column":12},"end":{"line":93,"column":74}},"60":{"start":{"line":95,"column":4},"end":{"line":95,"column":18}},"61":{"start":{"line":98,"column":12},"end":{"line":98,"column":18}},"62":{"start":{"line":99,"column":4},"end":{"line":111,"column":5}},"63":{"start":{"line":100,"column":16},"end":{"line":100,"column":69}},"64":{"start":{"line":101,"column":8},"end":{"line":106,"column":9}},"65":{"start":{"line":102,"column":12},"end":{"line":102,"column":23}},"66":{"start":{"line":105,"column":12},"end":{"line":105,"column":23}},"67":{"start":{"line":107,"column":8},"end":{"line":110,"column":9}},"68":{"start":{"line":108,"column":12},"end":{"line":108,"column":97}},"69":{"start":{"line":109,"column":12},"end":{"line":109,"column":73}},"70":{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},"71":{"start":{"line":113,"column":8},"end":{"line":113,"column":49}},"72":{"start":{"line":115,"column":4},"end":{"line":115,"column":13}},"73":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"74":{"start":{"line":119,"column":8},"end":{"line":119,"column":65}},"75":{"start":{"line":121,"column":14},"end":{"line":144,"column":6}},"76":{"start":{"line":122,"column":22},"end":{"line":122,"column":37}},"77":{"start":{"line":123,"column":20},"end":{"line":123,"column":33}},"78":{"start":{"line":124,"column":21},"end":{"line":124,"column":23}},"79":{"start":{"line":125,"column":8},"end":{"line":139,"column":9}},"80":{"start":{"line":126,"column":28},"end":{"line":126,"column":30}},"81":{"start":{"line":127,"column":12},"end":{"line":137,"column":13}},"82":{"start":{"line":128,"column":16},"end":{"line":136,"column":17}},"83":{"start":{"line":129,"column":20},"end":{"line":129,"column":80}},"84":{"start":{"line":131,"column":21},"end":{"line":136,"column":17}},"85":{"start":{"line":132,"column":20},"end":{"line":132,"column":91}},"86":{"start":{"line":135,"column":20},"end":{"line":135,"column":69}},"87":{"start":{"line":138,"column":12},"end":{"line":138,"column":35}},"88":{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},"89":{"start":{"line":141,"column":12},"end":{"line":141,"column":26}},"90":{"start":{"line":143,"column":8},"end":{"line":143,"column":81}},"91":{"start":{"line":143,"column":38},"end":{"line":143,"column":78}},"92":{"start":{"line":145,"column":4},"end":{"line":145,"column":15}},"93":{"start":{"line":147,"column":0},"end":{"line":147,"column":36}},"94":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"95":{"start":{"line":150,"column":8},"end":{"line":150,"column":32}},"96":{"start":{"line":152,"column":4},"end":{"line":154,"column":5}},"97":{"start":{"line":153,"column":8},"end":{"line":153,"column":21}},"98":{"start":{"line":155,"column":4},"end":{"line":157,"column":5}},"99":{"start":{"line":156,"column":8},"end":{"line":156,"column":25}},"100":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"101":{"start":{"line":159,"column":8},"end":{"line":159,"column":24}},"102":{"start":{"line":161,"column":4},"end":{"line":163,"column":5}},"103":{"start":{"line":162,"column":8},"end":{"line":162,"column":20}},"104":{"start":{"line":164,"column":4},"end":{"line":166,"column":5}},"105":{"start":{"line":165,"column":8},"end":{"line":165,"column":23}},"106":{"start":{"line":167,"column":4},"end":{"line":169,"column":5}},"107":{"start":{"line":168,"column":8},"end":{"line":168,"column":27}},"108":{"start":{"line":170,"column":4},"end":{"line":172,"column":5}},"109":{"start":{"line":171,"column":8},"end":{"line":171,"column":22}},"110":{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},"111":{"start":{"line":174,"column":8},"end":{"line":174,"column":22}},"112":{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},"113":{"start":{"line":177,"column":8},"end":{"line":177,"column":23}},"114":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"115":{"start":{"line":180,"column":8},"end":{"line":180,"column":22}}},"fnMap":{"0":{"name":"parseWhere","decl":{"start":{"line":7,"column":15},"end":{"line":7,"column":25}},"loc":{"start":{"line":7,"column":48},"end":{"line":41,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":32},"end":{"line":12,"column":33}},"loc":{"start":{"line":12,"column":42},"end":{"line":36,"column":5}},"line":12},"2":{"name":"parseWhereComparators","decl":{"start":{"line":43,"column":9},"end":{"line":43,"column":30}},"loc":{"start":{"line":43,"column":65},"end":{"line":96,"column":1}},"line":43},"3":{"name":"(anonymous_3)","decl":{"start":{"line":47,"column":54},"end":{"line":47,"column":55}},"loc":{"start":{"line":47,"column":63},"end":{"line":49,"column":13}},"line":47},"4":{"name":"(anonymous_4)","decl":{"start":{"line":52,"column":54},"end":{"line":52,"column":55}},"loc":{"start":{"line":52,"column":63},"end":{"line":54,"column":13}},"line":52},"5":{"name":"(anonymous_5)","decl":{"start":{"line":57,"column":54},"end":{"line":57,"column":55}},"loc":{"start":{"line":57,"column":63},"end":{"line":59,"column":13}},"line":57},"6":{"name":"(anonymous_6)","decl":{"start":{"line":62,"column":54},"end":{"line":62,"column":55}},"loc":{"start":{"line":62,"column":63},"end":{"line":79,"column":13}},"line":62},"7":{"name":"(anonymous_7)","decl":{"start":{"line":82,"column":54},"end":{"line":82,"column":55}},"loc":{"start":{"line":82,"column":63},"end":{"line":84,"column":13}},"line":82},"8":{"name":"processAndOR","decl":{"start":{"line":97,"column":9},"end":{"line":97,"column":21}},"loc":{"start":{"line":97,"column":59},"end":{"line":116,"column":1}},"line":97},"9":{"name":"parseOptions","decl":{"start":{"line":117,"column":15},"end":{"line":117,"column":27}},"loc":{"start":{"line":117,"column":43},"end":{"line":146,"column":1}},"line":117},"10":{"name":"(anonymous_10)","decl":{"start":{"line":121,"column":30},"end":{"line":121,"column":31}},"loc":{"start":{"line":121,"column":37},"end":{"line":144,"column":5}},"line":121},"11":{"name":"(anonymous_11)","decl":{"start":{"line":143,"column":27},"end":{"line":143,"column":28}},"loc":{"start":{"line":143,"column":38},"end":{"line":143,"column":78}},"line":143},"12":{"name":"parseWhereField","decl":{"start":{"line":148,"column":9},"end":{"line":148,"column":24}},"loc":{"start":{"line":148,"column":30},"end":{"line":182,"column":1}},"line":148}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},{"start":{"line":8,"column":4},"end":{"line":10,"column":5}}],"line":8},"1":{"loc":{"start":{"line":13,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":16,"column":9}},{"start":{"line":13,"column":8},"end":{"line":16,"column":9}}],"line":13},"2":{"loc":{"start":{"line":13,"column":12},"end":{"line":13,"column":49}},"type":"binary-expr","locations":[{"start":{"line":13,"column":12},"end":{"line":13,"column":32}},{"start":{"line":13,"column":36},"end":{"line":13,"column":49}}],"line":13},"3":{"loc":{"start":{"line":20,"column":12},"end":{"line":22,"column":13}},"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":22,"column":13}},{"start":{"line":20,"column":12},"end":{"line":22,"column":13}}],"line":20},"4":{"loc":{"start":{"line":20,"column":16},"end":{"line":20,"column":53}},"type":"binary-expr","locations":[{"start":{"line":20,"column":16},"end":{"line":20,"column":36}},{"start":{"line":20,"column":40},"end":{"line":20,"column":53}}],"line":20},"5":{"loc":{"start":{"line":25,"column":25},"end":{"line":25,"column":48}},"type":"binary-expr","locations":[{"start":{"line":25,"column":25},"end":{"line":25,"column":31}},{"start":{"line":25,"column":35},"end":{"line":25,"column":48}}],"line":25},"6":{"loc":{"start":{"line":31,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":34,"column":9}},{"start":{"line":31,"column":8},"end":{"line":34,"column":9}}],"line":31},"7":{"loc":{"start":{"line":31,"column":12},"end":{"line":31,"column":42}},"type":"binary-expr","locations":[{"start":{"line":31,"column":12},"end":{"line":31,"column":25}},{"start":{"line":31,"column":29},"end":{"line":31,"column":32}},{"start":{"line":31,"column":36},"end":{"line":31,"column":42}}],"line":31},"8":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{"line":37,"column":4},"end":{"line":39,"column":5}}],"line":37},"9":{"loc":{"start":{"line":45,"column":4},"end":{"line":94,"column":5}},"type":"switch","locations":[{"start":{"line":46,"column":8},"end":{"line":50,"column":18}},{"start":{"line":51,"column":8},"end":{"line":55,"column":18}},{"start":{"line":56,"column":8},"end":{"line":60,"column":18}},{"start":{"line":61,"column":8},"end":{"line":80,"column":18}},{"start":{"line":81,"column":8},"end":{"line":85,"column":18}},{"start":{"line":86,"column":8},"end":{"line":88,"column":18}},{"start":{"line":89,"column":8},"end":{"line":91,"column":18}},{"start":{"line":92,"column":8},"end":{"line":93,"column":74}}],"line":45},"10":{"loc":{"start":{"line":48,"column":30},"end":{"line":48,"column":56}},"type":"binary-expr","locations":[{"start":{"line":48,"column":30},"end":{"line":48,"column":50}},{"start":{"line":48,"column":54},"end":{"line":48,"column":56}}],"line":48},"11":{"loc":{"start":{"line":53,"column":30},"end":{"line":53,"column":56}},"type":"binary-expr","locations":[{"start":{"line":53,"column":30},"end":{"line":53,"column":50}},{"start":{"line":53,"column":54},"end":{"line":53,"column":56}}],"line":53},"12":{"loc":{"start":{"line":58,"column":30},"end":{"line":58,"column":56}},"type":"binary-expr","locations":[{"start":{"line":58,"column":30},"end":{"line":58,"column":50}},{"start":{"line":58,"column":54},"end":{"line":58,"column":56}}],"line":58},"13":{"loc":{"start":{"line":64,"column":16},"end":{"line":78,"column":17}},"type":"if","locations":[{"start":{"line":64,"column":16},"end":{"line":78,"column":17}},{"start":{"line":64,"column":16},"end":{"line":78,"column":17}}],"line":64},"14":{"loc":{"start":{"line":64,"column":20},"end":{"line":64,"column":74}},"type":"binary-expr","locations":[{"start":{"line":64,"column":20},"end":{"line":64,"column":37}},{"start":{"line":64,"column":41},"end":{"line":64,"column":74}}],"line":64},"15":{"loc":{"start":{"line":65,"column":34},"end":{"line":65,"column":60}},"type":"binary-expr","locations":[{"start":{"line":65,"column":34},"end":{"line":65,"column":54}},{"start":{"line":65,"column":58},"end":{"line":65,"column":60}}],"line":65},"16":{"loc":{"start":{"line":67,"column":21},"end":{"line":78,"column":17}},"type":"if","locations":[{"start":{"line":67,"column":21},"end":{"line":78,"column":17}},{"start":{"line":67,"column":21},"end":{"line":78,"column":17}}],"line":67},"17":{"loc":{"start":{"line":68,"column":34},"end":{"line":68,"column":60}},"type":"binary-expr","locations":[{"start":{"line":68,"column":34},"end":{"line":68,"column":54}},{"start":{"line":68,"column":58},"end":{"line":68,"column":60}}],"line":68},"18":{"loc":{"start":{"line":70,"column":21},"end":{"line":78,"column":17}},"type":"if","locations":[{"start":{"line":70,"column":21},"end":{"line":78,"column":17}},{"start":{"line":70,"column":21},"end":{"line":78,"column":17}}],"line":70},"19":{"loc":{"start":{"line":71,"column":34},"end":{"line":71,"column":60}},"type":"binary-expr","locations":[{"start":{"line":71,"column":34},"end":{"line":71,"column":54}},{"start":{"line":71,"column":58},"end":{"line":71,"column":60}}],"line":71},"20":{"loc":{"start":{"line":73,"column":21},"end":{"line":78,"column":17}},"type":"if","locations":[{"start":{"line":73,"column":21},"end":{"line":78,"column":17}},{"start":{"line":73,"column":21},"end":{"line":78,"column":17}}],"line":73},"21":{"loc":{"start":{"line":77,"column":34},"end":{"line":77,"column":60}},"type":"binary-expr","locations":[{"start":{"line":77,"column":34},"end":{"line":77,"column":54}},{"start":{"line":77,"column":58},"end":{"line":77,"column":60}}],"line":77},"22":{"loc":{"start":{"line":83,"column":30},"end":{"line":83,"column":56}},"type":"binary-expr","locations":[{"start":{"line":83,"column":30},"end":{"line":83,"column":50}},{"start":{"line":83,"column":54},"end":{"line":83,"column":56}}],"line":83},"23":{"loc":{"start":{"line":101,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":106,"column":9}},{"start":{"line":101,"column":8},"end":{"line":106,"column":9}}],"line":101},"24":{"loc":{"start":{"line":102,"column":16},"end":{"line":102,"column":22}},"type":"binary-expr","locations":[{"start":{"line":102,"column":16},"end":{"line":102,"column":17}},{"start":{"line":102,"column":21},"end":{"line":102,"column":22}}],"line":102},"25":{"loc":{"start":{"line":105,"column":16},"end":{"line":105,"column":22}},"type":"binary-expr","locations":[{"start":{"line":105,"column":16},"end":{"line":105,"column":17}},{"start":{"line":105,"column":21},"end":{"line":105,"column":22}}],"line":105},"26":{"loc":{"start":{"line":107,"column":8},"end":{"line":110,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":110,"column":9}},{"start":{"line":107,"column":8},"end":{"line":110,"column":9}}],"line":107},"27":{"loc":{"start":{"line":107,"column":12},"end":{"line":107,"column":49}},"type":"binary-expr","locations":[{"start":{"line":107,"column":12},"end":{"line":107,"column":32}},{"start":{"line":107,"column":36},"end":{"line":107,"column":49}}],"line":107},"28":{"loc":{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},{"start":{"line":112,"column":4},"end":{"line":114,"column":5}}],"line":112},"29":{"loc":{"start":{"line":112,"column":8},"end":{"line":112,"column":45}},"type":"binary-expr","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":28}},{"start":{"line":112,"column":32},"end":{"line":112,"column":45}}],"line":112},"30":{"loc":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},{"start":{"line":118,"column":4},"end":{"line":120,"column":5}}],"line":118},"31":{"loc":{"start":{"line":128,"column":16},"end":{"line":136,"column":17}},"type":"if","locations":[{"start":{"line":128,"column":16},"end":{"line":136,"column":17}},{"start":{"line":128,"column":16},"end":{"line":136,"column":17}}],"line":128},"32":{"loc":{"start":{"line":129,"column":41},"end":{"line":129,"column":67}},"type":"binary-expr","locations":[{"start":{"line":129,"column":41},"end":{"line":129,"column":61}},{"start":{"line":129,"column":65},"end":{"line":129,"column":67}}],"line":129},"33":{"loc":{"start":{"line":131,"column":21},"end":{"line":136,"column":17}},"type":"if","locations":[{"start":{"line":131,"column":21},"end":{"line":136,"column":17}},{"start":{"line":131,"column":21},"end":{"line":136,"column":17}}],"line":131},"34":{"loc":{"start":{"line":132,"column":57},"end":{"line":132,"column":84}},"type":"binary-expr","locations":[{"start":{"line":132,"column":57},"end":{"line":132,"column":77}},{"start":{"line":132,"column":81},"end":{"line":132,"column":84}}],"line":132},"35":{"loc":{"start":{"line":135,"column":41},"end":{"line":135,"column":67}},"type":"binary-expr","locations":[{"start":{"line":135,"column":41},"end":{"line":135,"column":61}},{"start":{"line":135,"column":65},"end":{"line":135,"column":67}}],"line":135},"36":{"loc":{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},{"start":{"line":140,"column":8},"end":{"line":142,"column":9}}],"line":140},"37":{"loc":{"start":{"line":143,"column":38},"end":{"line":143,"column":78}},"type":"cond-expr","locations":[{"start":{"line":143,"column":72},"end":{"line":143,"column":73}},{"start":{"line":143,"column":76},"end":{"line":143,"column":78}}],"line":143},"38":{"loc":{"start":{"line":143,"column":40},"end":{"line":143,"column":51}},"type":"binary-expr","locations":[{"start":{"line":143,"column":40},"end":{"line":143,"column":45}},{"start":{"line":143,"column":49},"end":{"line":143,"column":51}}],"line":143},"39":{"loc":{"start":{"line":143,"column":57},"end":{"line":143,"column":68}},"type":"binary-expr","locations":[{"start":{"line":143,"column":57},"end":{"line":143,"column":62}},{"start":{"line":143,"column":66},"end":{"line":143,"column":68}}],"line":143},"40":{"loc":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},{"start":{"line":149,"column":4},"end":{"line":151,"column":5}}],"line":149},"41":{"loc":{"start":{"line":152,"column":4},"end":{"line":154,"column":5}},"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":154,"column":5}},{"start":{"line":152,"column":4},"end":{"line":154,"column":5}}],"line":152},"42":{"loc":{"start":{"line":155,"column":4},"end":{"line":157,"column":5}},"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":157,"column":5}},{"start":{"line":155,"column":4},"end":{"line":157,"column":5}}],"line":155},"43":{"loc":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},{"start":{"line":158,"column":4},"end":{"line":160,"column":5}}],"line":158},"44":{"loc":{"start":{"line":161,"column":4},"end":{"line":163,"column":5}},"type":"if","locations":[{"start":{"line":161,"column":4},"end":{"line":163,"column":5}},{"start":{"line":161,"column":4},"end":{"line":163,"column":5}}],"line":161},"45":{"loc":{"start":{"line":164,"column":4},"end":{"line":166,"column":5}},"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":166,"column":5}},{"start":{"line":164,"column":4},"end":{"line":166,"column":5}}],"line":164},"46":{"loc":{"start":{"line":167,"column":4},"end":{"line":169,"column":5}},"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":169,"column":5}},{"start":{"line":167,"column":4},"end":{"line":169,"column":5}}],"line":167},"47":{"loc":{"start":{"line":170,"column":4},"end":{"line":172,"column":5}},"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":172,"column":5}},{"start":{"line":170,"column":4},"end":{"line":172,"column":5}}],"line":170},"48":{"loc":{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},{"start":{"line":173,"column":4},"end":{"line":175,"column":5}}],"line":173},"49":{"loc":{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},{"start":{"line":176,"column":4},"end":{"line":178,"column":5}}],"line":176},"50":{"loc":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},{"start":{"line":179,"column":4},"end":{"line":181,"column":5}}],"line":179}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":139,"6":0,"7":139,"8":139,"9":4910568,"10":0,"11":0,"12":4910568,"13":4910566,"14":4910566,"15":4781342,"16":0,"17":4781342,"18":4781342,"19":4781288,"20":54,"21":4910512,"22":0,"23":0,"24":4910512,"25":76,"26":9,"27":67,"28":1,"29":6913561,"30":6913561,"31":969181,"32":1033793,"33":969181,"34":2196809,"35":2326033,"36":2196809,"37":516905,"38":387681,"39":516896,"40":1679928,"41":1486092,"42":1486092,"43":0,"44":1486092,"45":0,"46":1486092,"47":0,"48":1486092,"49":1,"50":1486084,"51":1679914,"52":10,"53":0,"54":0,"55":969193,"56":969180,"57":581518,"58":581509,"59":13,"60":6913489,"61":1550711,"62":1550711,"63":2132219,"64":2132201,"65":1227631,"66":904570,"67":2132201,"68":0,"69":0,"70":1550689,"71":0,"72":1550689,"73":139,"74":0,"75":139,"76":67,"77":67,"78":67,"79":67,"80":30003,"81":30003,"82":98547,"83":8383,"84":90164,"85":8401,"86":81763,"87":30003,"88":67,"89":48,"90":19,"91":37578,"92":67,"93":1,"94":5332138,"95":3522989,"96":5332138,"97":408753,"98":4923385,"99":1377175,"100":3546210,"101":207704,"102":3338506,"103":137607,"104":3200899,"105":137607,"106":3063292,"107":8383,"108":3054909,"109":719133,"110":2335776,"111":197079,"112":2138697,"113":197079,"114":1941618,"115":132467},"f":{"0":139,"1":4910568,"2":6913561,"3":1033793,"4":2326033,"5":387681,"6":1486092,"7":0,"8":1550711,"9":139,"10":67,"11":37578,"12":5332138},"b":{"0":[0,139],"1":[0,4910568],"2":[4910568,76],"3":[0,4781342],"4":[4781342,74],"5":[4781288,4781288],"6":[0,4910512],"7":[4910512,0,0],"8":[9,67],"9":[969181,2196809,516905,1679928,10,969193,581518,13],"10":[1033793,646120],"11":[2326033,1163016],"12":[387681,9],"13":[0,1486092],"14":[1486092,0],"15":[0,0],"16":[0,1486092],"17":[0,0],"18":[0,1486092],"19":[0,0],"20":[1,1486084],"21":[1486084,6],"22":[0,0],"23":[1227631,904570],"24":[1227631,920715],"25":[904570,898246],"26":[0,2132201],"27":[2132201,33],"28":[0,1550689],"29":[1550689,24],"30":[0,139],"31":[8383,90164],"32":[8383,0],"33":[8401,81763],"34":[8401,0],"35":[81763,0],"36":[48,19],"37":[12884,24694],"38":[37578,0],"39":[37578,0],"40":[3522989,1809149],"41":[408753,4923385],"42":[1377175,3546210],"43":[207704,3338506],"44":[137607,3200899],"45":[137607,3063292],"46":[8383,3054909],"47":[719133,2335776],"48":[197079,2138697],"49":[197079,1941618],"50":[132467,1809151]},"inputSourceMap":{"version":3,"file":"/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/query/QueryParser.ts","sources":["/Users/hatsusaiokunishi/UBC/2023/cs310/c1/project_team232/src/query/QueryParser.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError, ResultTooLargeError} from \"../controller/IInsightFacade\";\r\nimport {Section} from \"../model/Section\";\r\n\r\nexport interface Query {\r\n\tWHERE: Where;\r\n\tOPTIONS: Options;\r\n}\r\n\r\ntype WhereComparators = \"LT\" | \"GT\" | \"EQ\" | \"AND\" | \"OR\" | \"IS\" | \"NOT\";\r\n\r\ninterface Where {\r\n\t[key: string]: {[key: string]: Where} | Array<{[key: string]: Where}>;\r\n}\r\n\r\ninterface Options {\r\n\tCOLUMNS: string[];\r\n\tORDER?: string;\r\n}\r\n\r\nconst enableLogging = false;\r\nconst recordId = 36004;\r\n\r\n/**\r\n * This parses the 'where' clause\r\n * @param whereCondition - This is the 'where' clause of the query\r\n * @param data - Data to run where clause on\r\n * @returns - Returns all rows which meet the 'where' clause\r\n */\r\nexport async function parseWhere(whereCondition: Where, data: Promise<any[]>): Promise<Section[]> {\r\n\tif (whereCondition === null) {\r\n\t\tthrow new InsightError(\"Empty filters\");\r\n\t}\r\n\t// Filter the data as per where condition\r\n\tlet log = true;\r\n\tlet d = (await data).filter((item) => {\r\n\t\tif (item.id === recordId && enableLogging) {\r\n\t\t\tconsole.log(item);\r\n\t\t\tconsole.log(\"wherecondition\", JSON.stringify(whereCondition));\r\n\t\t}\r\n\t\tlet ps = Object.keys(whereCondition);\r\n\t\tlet result = true;\r\n\t\tfor (const p of ps) {\r\n\t\t\tif (item.id === recordId && enableLogging) {\r\n\t\t\t\tconsole.log(\"p\", p);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tlet parseWhereVal = parseWhereComparators(item, whereCondition, p as WhereComparators);\r\n\t\t\t\tresult = result && parseWhereVal;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthrow new InsightError(\"Failed to parse WHERE clause\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (enableLogging && log && result) {\r\n\t\t\tconsole.log(item);\r\n\t\t\tlog = false;\r\n\t\t}\r\n\t\treturn result;\r\n\t});\r\n\tif (d.length > 5000) {\r\n\t\tthrow new ResultTooLargeError(\"Result too large(>5000)\");\r\n\t}\r\n\r\n\treturn d;\r\n}\r\n\r\nfunction parseWhereComparators(item: any, whereCondition: Where, comparator: WhereComparators): boolean {\r\n\tlet result = false;\r\n\tswitch (comparator.toString()) {\r\n\t\tcase \"LT\":\r\n\t\t\tObject.keys(whereCondition[\"LT\"]).forEach((key) => {\r\n\t\t\t\tresult = item[parseWhereField(key) || \"\"] < (whereCondition[\"LT\"] as any)[key];\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tcase \"GT\":\r\n\t\t\tObject.keys(whereCondition[\"GT\"]).forEach((key) => {\r\n\t\t\t\tresult = item[parseWhereField(key) || \"\"] > (whereCondition[\"GT\"] as any)[key];\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tcase \"EQ\":\r\n\t\t\tObject.keys(whereCondition[\"EQ\"]).forEach((key) => {\r\n\t\t\t\tresult = item[parseWhereField(key) || \"\"].toString() === (whereCondition[\"EQ\"] as any)[key].toString();\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tcase \"IS\":\r\n\t\t\tObject.keys(whereCondition[\"IS\"]).forEach((key) => {\r\n\t\t\t\tlet o: any = whereCondition[\"IS\"];\r\n\t\t\t\tif (o[key][0] === \"*\" && o[key][o[key].length - 1] === \"*\") {\r\n\t\t\t\t\tresult = item[parseWhereField(key) || \"\"].includes(o[key].replaceAll(\"*\", \"\"));\r\n\t\t\t\t} else if (o[key][0] === \"*\") {\r\n\t\t\t\t\tresult = item[parseWhereField(key) || \"\"].endsWith(o[key].substring(1));\r\n\t\t\t\t} else if (o[key][o[key].length - 1] === \"*\") {\r\n\t\t\t\t\tresult = item[parseWhereField(key) || \"\"].startsWith(o[key].substring(0, o[key].length - 1));\r\n\t\t\t\t} else if (o[key].includes(\"*\")) {\r\n\t\t\t\t\tthrow new InsightError(\"Invalid comparator\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = item[parseWhereField(key) || \"\"].toString() === o[key].toString();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tcase \"NOT\":\r\n\t\t\tObject.keys(whereCondition[\"EQ\"]).forEach((key) => {\r\n\t\t\t\tresult = item[parseWhereField(key) || \"\"].toString() !== (whereCondition[\"EQ\"] as any)[key].toString();\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tcase \"AND\":\r\n\t\t\tresult = processAndOR(\"and\", whereCondition[\"AND\"] as [], true, item);\r\n\t\t\tbreak;\r\n\t\tcase \"OR\":\r\n\t\t\tresult = processAndOR(\"or\", whereCondition[\"OR\"] as [], result, item);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthrow new InsightError(\"Invalid comparator\");\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nfunction processAndOR(comparator: \"and\" | \"or\", condition: any[], result: boolean, item: any) {\r\n\tlet r: boolean = result;\r\n\tfor (const obj of condition) {\r\n\t\tlet s = parseWhereComparators(item, obj, Object.keys(obj)[0] as WhereComparators);\r\n\t\tif (comparator === \"and\") {\r\n\t\t\tr = r && s;\r\n\t\t} else {\r\n\t\t\tr = r || s;\r\n\t\t}\r\n\t\tif (item.id === recordId && enableLogging) {\r\n\t\t\tconsole.log(comparator, \"-par condition:\", Object.keys(obj)[0], JSON.stringify(obj));\r\n\t\t\tconsole.log(\"result of\", comparator, JSON.stringify(obj), r);\r\n\t\t}\r\n\t}\r\n\tif (item.id === recordId && enableLogging) {\r\n\t\tconsole.log(\"result of processAndOR\", r);\r\n\t}\r\n\treturn r;\r\n}\r\n\r\n/**\r\n * This parses the entire 'OPTIONS' clause of query\r\n * @param obj\r\n * @returns\r\n */\r\nexport async function parseOptions(options: Options, data: Promise<any[]>): Promise<any[]> {\r\n\tif (options === null) {\r\n\t\tthrow new InsightError(\"Empty options\");\r\n\t}\r\n\r\n\tlet res = await data.then((d) => {\r\n\t\t// Parsing columns\r\n\t\tlet columns = options.COLUMNS;\r\n\t\tlet order = options.ORDER;\r\n\t\tlet result: Array<{[key: string]: string | number}> = [];\r\n\t\tfor (const row of d) {\r\n\t\t\tlet rowResult: {[key: string]: string | number} = {};\r\n\t\t\tfor (const col of columns) {\r\n\t\t\t\tif (col.includes(\"uuid\")) {\r\n\t\t\t\t\trowResult[col] = row[parseWhereField(col) || \"\"].toString();\r\n\t\t\t\t} else if (col.toLowerCase().includes(\"year\")) {\r\n\t\t\t\t\trowResult[col] = Number.parseInt(row[parseWhereField(col) || \"0\"], 10);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trowResult[col] = row[parseWhereField(col) || \"\"];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresult.push(rowResult);\r\n\t\t}\r\n\r\n\t\t// parsing order\r\n\t\tif (!order) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\treturn result.sort((a, b) => (a[order || \"\"] > b[order || \"\"] ? 1 : -1));\r\n\t});\r\n\treturn res;\r\n}\r\n\r\nfunction parseWhereField(key: string) {\r\n\tif (key.includes(\"_\")) {\r\n\t\tkey = key.split(\"_\")[1];\r\n\t}\r\n\tif (key === \"avg\") {\r\n\t\treturn \"Avg\";\r\n\t}\r\n\tif (key === \"dept\") {\r\n\t\treturn \"Subject\";\r\n\t}\r\n\tif (key === \"id\") {\r\n\t\treturn \"Course\";\r\n\t}\r\n\tif (key === \"uuid\") {\r\n\t\treturn \"id\";\r\n\t}\r\n\tif (key === \"title\") {\r\n\t\treturn \"Title\";\r\n\t}\r\n\tif (key === \"instructor\") {\r\n\t\treturn \"Professor\";\r\n\t}\r\n\tif (key === \"year\") {\r\n\t\treturn \"Year\";\r\n\t}\r\n\tif (key === \"pass\") {\r\n\t\treturn \"Pass\";\r\n\t}\r\n\tif (key === \"audit\") {\r\n\t\treturn \"Audit\";\r\n\t}\r\n\tif (key === \"fail\") {\r\n\t\treturn \"Fail\";\r\n\t}\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"72f9f5556d8b707cc52ec215ebc9c35878ea5f48","contentHash":"d3389794ce6c56e96644d2d501b2ff04bfc4556bf62dd2e6beb435baf30cd63d"}}